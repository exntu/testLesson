<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- namespace에서 interface로 정의된 DAO를 정확히 명시해주어야 한다 -->
<mapper namespace="com.skt.date.sql.matching">

	<!-- /////////////////////////////////////////////////////////////////////////////////////////////////// 
		/////////////////////////////////////////////// INCLUDE //////////////////////////////////////////////// 
		//////////////////////////////////////////////////////////////////////////////////////////////////// -->

	<!-- /////////////////////////////////////////////////////////////////////////////////////////////////// 
		/////////////////////////////////////////////// SELECT ///////////////////////////////////////////////// 
		//////////////////////////////////////////////////////////////////////////////////////////////////// -->

	<!-- //////////////////////////////////////////////////
	//
	// 서버 시간 조회한다. 
	//
	////////////////////////////////////////////////// -->
	<select id="matchingTimer" resultType="String">
		/* com.skt.date.sql.matching.matchingTimer*/
		SELECT
			CURRENT_TIMESTAMP()		
		FROM 
			DUAL
	</select>
	
	<!-- //////////////////////////////////////////////////
	//
	// 오늘 카드 날짜 조회 
	//
	////////////////////////////////////////////////// -->	
	<select id="matchingPickToday" resultType="FromToVo">
		/* com.skt.date.sql.matching.matchingPickToday*/
		<![CDATA[
			SELECT
				`FROM`			AS		`from`,
				`TO`				AS		`to`,
				SELECT_YN		AS		selectYN
			FROM	
				T_MATCHING
			WHERE
				CREATE_DT		=		CURDATE()
			limit
				2
		]]>
	</select>

	<!-- //////////////////////////////////////////////////
	//
	// 유저를 조회한다. 
	//		1. 나와 다른 신분
	//		2. T_MATCHING 에서 전에 만났던 사람 제외
	//
	////////////////////////////////////////////////// -->
	<select id="selectTwoCard" parameterType="MatchingVo" resultType="MatchingVo">
		/* com.skt.date.sql.matching.selectTwoCard*/
		<![CDATA[
				SELECT 
					EMAIL			AS				email	,
					GENDER 			AS 			gender ,
					NICKNAME		AS				nickname
				FROM 			
					T_USER
				WHERE			
					GENDER 			!=				#{ gender }
				AND 				
					EMAIL			NOT IN 	(	
														SELECT	 	
															`TO`		AS		 otheremail
														FROM 		
															T_MATCHING
														WHERE 		
															`FROM`	=		#{ email }	
													)
				limit
					2
		]]>
	</select>
	
	<!-- //////////////////////////////////////////////////
	//
	// 7일간의 History 조회
	//
	////////////////////////////////////////////////// -->	
	<select id="matchingHistory" parameterType="String" resultType="MatchingAllVo">
		/* com.skt.date.sql.matching.matchingHistory*/
		<![CDATA[
			SELECT
				T_USER_ADDITIONAL.EMAIL AS email
			FROM
				T_MATCHING
			JOIN 
				T_USER_ADDITIONAL
			ON 
				T_MATCHING.`TO` = T_USER_ADDITIONAL.EMAIL
			WHERE
				T_MATCHING.`FROM` = #{ email }
			AND
				T_MATCHING.CREATE_DT between adddate(now(),-7) and now()
			ORDER BY
				T_MATCHING.CREATE_DT desc
		]]>
	</select>
	
	<!-- //////////////////////////////////////////////////
	//
	// 7일간의 History를 email을 조회해 온다. (최근 순서)
	//
	////////////////////////////////////////////////// -->	
	<select id="matchingHistoryEmail" parameterType="String" resultType="FromToVo">
		/* com.skt.date.sql.matching.matchingHistoryEmail*/
		<![CDATA[
			SELECT
				T_MATCHING.`TO` AS `to`
			FROM
				T_MATCHING
			WHERE
				T_MATCHING.`FROM` = #{ email }
			AND
				T_MATCHING.CREATE_DT between adddate(now(),-7) and now()
			ORDER BY
				T_MATCHING.CREATE_DT desc
		]]>
	</select>
	

	<!-- //////////////////////////////////////////////////
	//
	// 뽑힌 2장의 유저의 상세정보를 조회한다. 
	//
	////////////////////////////////////////////////// -->
	<select id="matchingUserAlready" parameterType="String" resultType="FromToVo">
		/* com.skt.date.sql.matching.matchingUserAlready*/
		<![CDATA[
			SELECT
				T_MATCHING.`FROM` AS `from`,
				T_MATCHING.`TO` AS `to`,
				T_MATCHING.SELECT_YN AS selectYN,
				T_MATCHING.CREATE_DT AS createDT,
				T_USER_ADDITIONAL.EMAIL AS eamil,
				T_USER_ADDITIONAL.CLASSIFY AS classify,
				T_USER_ADDITIONAL.DATA AS data
			FROM
				T_MATCHING
			JOIN T_USER_ADDITIONAL
			ON T_MATCHING.`TO` = T_USER_ADDITIONAL.EMAIL
			WHERE
				T_MATCHING.`TO` = #{ email }
		]]>
	</select>

	<!-- //////////////////////////////////////////////////
	//
	// history 유저의 상세정보를 조회한다. 
	//
	////////////////////////////////////////////////// -->
	<select id="matchingHistoryCard" parameterType="FromToVo" resultType="MatchingAllVo">
		/* com.skt.date.sql.matching.matchingHistoryCard*/
		<![CDATA[
			SELECT
				T_USER.EMAIL AS email,
				T_USER.GENDER AS gender,
				T_USER.NICKNAME AS nickname,
				T_USER_ADDITIONAL.CLASSIFY AS classify,
				T_USER_ADDITIONAL.DATA AS data,
				T_MATCHING.CREATE_DT AS createDT,
				T_MATCHING.SELECT_YN AS selectYN
			FROM
				T_MATCHING
			JOIN 
				T_USER_ADDITIONAL
			ON 
				T_MATCHING.`TO` = T_USER_ADDITIONAL.EMAIL
			JOIN 
				T_USER
			ON
				T_USER.EMAIL = #{ to }
			WHERE
				T_MATCHING.`FROM` = #{ from }
			AND
				T_MATCHING.`TO` = #{ to }
		]]>
	</select>
	
	<!-- /////////////////////////////////////////////////////////////////////////////////////////////////// 
		/////////////////////////////////////////////// MERGE ////////////////////////////////////////////////// 
		//////////////////////////////////////////////////////////////////////////////////////////////////// -->

	<!-- /////////////////////////////////////////////////////////////////////////////////////////////////// 
		/////////////////////////////////////////////// INSERT ///////////////////////////////////////////////// 
		//////////////////////////////////////////////////////////////////////////////////////////////////// -->

	<!-- //////////////////////////////////////////////////
	//
	// INSERT 뽑힌 2장의 카드를 넣는다. 
	//
	////////////////////////////////////////////////// -->
	<insert id="insertMatchedCard" parameterType="FromToVo" >
		/*	com.skt.date.sql.matching.insertMatchedCard*/
		<![CDATA[
			INSERT	INTO	
				T_MATCHING (
			 		`FROM`	,
			 		`TO`	,
			 		SELECT_YN	,
			 		CREATE_DT
				)	VALUES	(
					#{ from }	,
					#{ to }	,
					#{ selectYN }	,
					CURRENT_TIMESTAMP()
			)
		]]>
	</insert>

	<!-- /////////////////////////////////////////////////////////////////////////////////////////////////// 
		/////////////////////////////////////////////// UPDATE ///////////////////////////////////////////////// 
		//////////////////////////////////////////////////////////////////////////////////////////////////// -->

	<!-- /////////////////////////////////////////////////////////////////////////////////////////////////// 
		/////////////////////////////////////////////// DELETE ///////////////////////////////////////////////// 
		//////////////////////////////////////////////////////////////////////////////////////////////////// -->

</mapper>